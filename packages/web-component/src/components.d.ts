/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface RasaChatbotWidget {
        /**
          * Indicates whether the chat messenger can be toggled to full screen mode.
         */
        "toggleFullScreen": boolean;
    }
    interface RasaIconArrowsContract {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface RasaIconArrowsExpand {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface RasaIconChat {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface RasaIconCloseChat {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
}
declare global {
    interface HTMLRasaChatbotWidgetElement extends Components.RasaChatbotWidget, HTMLStencilElement {
    }
    var HTMLRasaChatbotWidgetElement: {
        prototype: HTMLRasaChatbotWidgetElement;
        new (): HTMLRasaChatbotWidgetElement;
    };
    interface HTMLRasaIconArrowsContractElement extends Components.RasaIconArrowsContract, HTMLStencilElement {
    }
    var HTMLRasaIconArrowsContractElement: {
        prototype: HTMLRasaIconArrowsContractElement;
        new (): HTMLRasaIconArrowsContractElement;
    };
    interface HTMLRasaIconArrowsExpandElement extends Components.RasaIconArrowsExpand, HTMLStencilElement {
    }
    var HTMLRasaIconArrowsExpandElement: {
        prototype: HTMLRasaIconArrowsExpandElement;
        new (): HTMLRasaIconArrowsExpandElement;
    };
    interface HTMLRasaIconChatElement extends Components.RasaIconChat, HTMLStencilElement {
    }
    var HTMLRasaIconChatElement: {
        prototype: HTMLRasaIconChatElement;
        new (): HTMLRasaIconChatElement;
    };
    interface HTMLRasaIconCloseChatElement extends Components.RasaIconCloseChat, HTMLStencilElement {
    }
    var HTMLRasaIconCloseChatElement: {
        prototype: HTMLRasaIconCloseChatElement;
        new (): HTMLRasaIconCloseChatElement;
    };
    interface HTMLElementTagNameMap {
        "rasa-chatbot-widget": HTMLRasaChatbotWidgetElement;
        "rasa-icon-arrows-contract": HTMLRasaIconArrowsContractElement;
        "rasa-icon-arrows-expand": HTMLRasaIconArrowsExpandElement;
        "rasa-icon-chat": HTMLRasaIconChatElement;
        "rasa-icon-close-chat": HTMLRasaIconCloseChatElement;
    }
}
declare namespace LocalJSX {
    interface RasaChatbotWidget {
        /**
          * Indicates whether the chat messenger can be toggled to full screen mode.
         */
        "toggleFullScreen"?: boolean;
    }
    interface RasaIconArrowsContract {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface RasaIconArrowsExpand {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface RasaIconChat {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface RasaIconCloseChat {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Alias for `fill`
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "fill"?: string;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface IntrinsicElements {
        "rasa-chatbot-widget": RasaChatbotWidget;
        "rasa-icon-arrows-contract": RasaIconArrowsContract;
        "rasa-icon-arrows-expand": RasaIconArrowsExpand;
        "rasa-icon-chat": RasaIconChat;
        "rasa-icon-close-chat": RasaIconCloseChat;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "rasa-chatbot-widget": LocalJSX.RasaChatbotWidget & JSXBase.HTMLAttributes<HTMLRasaChatbotWidgetElement>;
            "rasa-icon-arrows-contract": LocalJSX.RasaIconArrowsContract & JSXBase.HTMLAttributes<HTMLRasaIconArrowsContractElement>;
            "rasa-icon-arrows-expand": LocalJSX.RasaIconArrowsExpand & JSXBase.HTMLAttributes<HTMLRasaIconArrowsExpandElement>;
            "rasa-icon-chat": LocalJSX.RasaIconChat & JSXBase.HTMLAttributes<HTMLRasaIconChatElement>;
            "rasa-icon-close-chat": LocalJSX.RasaIconCloseChat & JSXBase.HTMLAttributes<HTMLRasaIconCloseChatElement>;
        }
    }
}
